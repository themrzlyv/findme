{"version":3,"sources":["components/Tags/Tags.tsx","components/Tags/common/constants.ts","components/CustomSelect/CustomSelect.tsx","components/UploadProgress/UploadProgress.tsx","components/UploadButton/UploadButton.tsx","services/hooks/useFileUpload.tsx","services/api/api.file.ts","services/QueryId/success.ts","services/QueryId/error.ts","ui/pages/Post/common/data/constants.ts","ui/pages/Post/pages/CreatePost/CreatePost.tsx","ui/pages/Post/Post.tsx"],"names":["Tags","label","handleAddTag","variant","sx","React","useState","tags","setTags","inputValue","setInputValue","useEffect","TextField","value","onKeyDown","e","length","keyCode","prev","onChange","target","InputProps","startAdornment","display","map","data","index","Stack","direction","gap","marginBottom","marginRight","Chip","onDelete","newtags","filter","val","handleDelete","icon","fontSize","CustomSelect","id","labelSx","labelId","name","required","handleChange","FormControl","InputLabel","Select","item","MenuItem","UploadProgress","progress","fileName","handleRemoveFile","component","flexDirection","minWidth","marginX","alignItems","justifyContent","Typography","IconButton","size","onClick","LinearProgress","memo","UploadButton","wrapperStyle","handleFileChange","multiple","loading","acceptOnlyFormats","style","htmlFor","accept","join","type","Button","disabled","Boolean","CircularProgress","useFileUpload","fileUrl","setFileUrl","setFileName","setLoading","error","setError","setProgress","onFileChange","file","Promise","resolve","reject","fireStorage","ref","child","put","then","snapshot","getDownloadURL","url","percent","bytesTransferred","totalBytes","catch","uploadFile","removeFile","delete","deleteFile","err","success","CREATE_POST_SUCCESS","CREATE_POST_ERROR","categoryList","CreatePost","title","category","content","image","form","setForm","useCallback","arr","Paper","Box","py","marginY","width","fontWeight","margin","files","toast","toastId","createPost","message","Post","path","mainRoutes","element"],"mappings":"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","file":"static/js/4.a712bb30.chunk.js","sourcesContent":["import { Chip, Stack, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport TagSharpIcon from '@mui/icons-material/TagSharp';\r\nimport { maxTags, eachTagMaxSize } from './common/constants';\r\n\r\ninterface iProps {\r\n  label?: string;\r\n  handleAddTag: (arr: string[]) => void;\r\n  variant?: 'standard' | 'outlined' | 'filled';\r\n  sx?: any;\r\n}\r\n\r\nconst Tags: React.FC<iProps> = ({ label, handleAddTag, variant, sx }): JSX.Element => {\r\n  const [tags, setTags] = React.useState<string[]>([]);\r\n  const [inputValue, setInputValue] = React.useState<string>('');\r\n\r\n  const handleDelete = (value: string) => {\r\n    const newtags = tags.filter((val) => val !== value);\r\n    setInputValue('');\r\n    setTags(newtags);\r\n  };\r\n\r\n  const handlePressEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (tags.length >= maxTags) return;\r\n    if (inputValue === '') return;\r\n    if (inputValue.length > eachTagMaxSize) return;\r\n    if (e.keyCode === 32) {\r\n      setTags((prev) => [...prev, inputValue]);\r\n      return setInputValue('');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    if (e.target.value.length > eachTagMaxSize) return;\r\n    if (tags.length >= maxTags) {\r\n      return setInputValue('');\r\n    }\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleAddTag(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        variant={variant}\r\n        sx={sx}\r\n        value={inputValue}\r\n        onKeyDown={handlePressEnter}\r\n        onChange={handleChange}\r\n        label={label}\r\n        InputProps={{\r\n          startAdornment: tags?.length > 0 && (\r\n            <Box sx={{ display: 'flex' }}>\r\n              {tags.map((data, index) => {\r\n                return (\r\n                  <Stack direction=\"row\" gap={1} key={index} marginBottom={1} marginRight={1}>\r\n                    <Chip\r\n                      label={data}\r\n                      onDelete={() => handleDelete(data)}\r\n                      icon={<TagSharpIcon fontSize=\"small\" />}\r\n                    />\r\n                  </Stack>\r\n                );\r\n              })}\r\n            </Box>\r\n          ),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","export const maxTags = 5;\r\n\r\nexport const eachTagMaxSize = 9;","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent } from '@mui/material';\r\nimport React from 'react';\r\nimport { CustomSelectOption } from './common/types';\r\n\r\ninterface iProps {\r\n  id?: string | undefined;\r\n  sx?: any;\r\n  labelSx?: any;\r\n  name?: string | undefined;\r\n  label?: string | undefined;\r\n  labelId?: string | undefined;\r\n  required?: boolean;\r\n  variant?: 'outlined' | 'standard' | 'filled' | undefined;\r\n  data: CustomSelectOption[];\r\n  value: any;\r\n  handleChange: (event: SelectChangeEvent<any>) => void;\r\n}\r\n\r\nconst CustomSelect: React.FC<iProps> = ({\r\n  id,\r\n  sx,\r\n  labelSx,\r\n  label,\r\n  labelId,\r\n  variant,\r\n  data,\r\n  value,\r\n  name,\r\n  required,\r\n  handleChange,\r\n}): JSX.Element => {\r\n  const showOptions = () => {\r\n    return data.map((item: CustomSelectOption) => {\r\n      return (\r\n        <MenuItem key={item.id} value={item.name}>\r\n          {item.name}\r\n        </MenuItem>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl variant={variant} sx={sx}>\r\n        {label && (\r\n          <InputLabel sx={labelSx} id={labelId}>\r\n            {label}\r\n          </InputLabel>\r\n        )}\r\n        <Select\r\n          labelId={labelId}\r\n          id={id}\r\n          value={value}\r\n          label={label}\r\n          name={name}\r\n          onChange={handleChange}\r\n          required={required}\r\n        >\r\n          {showOptions()}\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import { IconButton, LinearProgress, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\ninterface iProps {\r\n  progress: number;\r\n  fileName: string;\r\n  handleRemoveFile: (name: string) => void;\r\n}\r\n\r\nconst UploadProgress: React.FC<iProps> = ({\r\n  progress,\r\n  fileName,\r\n  handleRemoveFile,\r\n}): JSX.Element => {\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      sx={{ minWidth: '10em', marginX: '2em', marginBottom: '0.6em' }}\r\n    >\r\n      <Box component=\"div\" display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Typography variant=\"caption\">{fileName}</Typography>\r\n        <IconButton size=\"small\" onClick={() => handleRemoveFile(fileName)}>\r\n          <CloseIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      </Box>\r\n      <LinearProgress variant=\"determinate\" value={progress} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadProgress);\r\n","import { Button, CircularProgress } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\nimport UploadProgress from '../UploadProgress';\r\n\r\ninterface iProps {\r\n  id?: string;\r\n  variant?: 'text' | 'outlined' | 'contained';\r\n  acceptOnlyFormats?: string[];\r\n  multiple?: boolean;\r\n  progress: number;\r\n  fileName: string;\r\n  loading?: boolean;\r\n  handleRemoveFile: (name: string) => void;\r\n  handleFileChange: React.ChangeEventHandler<HTMLInputElement>;\r\n  wrapperStyle?: React.CSSProperties | undefined;\r\n}\r\n\r\nconst UploadButton: React.FC<iProps> = ({\r\n  id,\r\n  wrapperStyle,\r\n  handleFileChange,\r\n  variant,\r\n  multiple,\r\n  progress,\r\n  fileName,\r\n  loading,\r\n  acceptOnlyFormats,\r\n  handleRemoveFile,\r\n}): JSX.Element => {\r\n  return (\r\n    <Box component=\"div\" display=\"flex\" alignItems=\"center\" style={wrapperStyle}>\r\n      <label htmlFor={id}>\r\n        <input\r\n          style={{ display: 'none' }}\r\n          accept={acceptOnlyFormats?.join(', ')}\r\n          id={id}\r\n          multiple={multiple}\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <Button variant={variant} component=\"span\" disabled={loading || Boolean(fileName)}>\r\n          {loading ? <CircularProgress size={20} /> : 'Upload'}\r\n        </Button>\r\n      </label>\r\n      {progress || fileName ? (\r\n        <UploadProgress\r\n          progress={progress}\r\n          handleRemoveFile={handleRemoveFile}\r\n          fileName={fileName}\r\n        />\r\n      ) : null}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadButton);\r\n","import { useState } from 'react';\r\nimport { deleteFile, uploadFile } from '../api/api.file';\r\n\r\nconst useFileUpload = () => {\r\n  const [fileUrl, setFileUrl] = useState<string>('');\r\n  const [fileName, setFileName] = useState<string>('');\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [error, setError] = useState<string | undefined>('');\r\n  const [progress, setProgress] = useState<number>(0);\r\n\r\n  const onFileChange = (file: File) => {\r\n    setProgress(0);\r\n    setLoading(true);\r\n    setError('');\r\n    setFileName(file.name);\r\n    uploadFile(file)\r\n      .then(({ url, percent }) => {\r\n        setFileUrl(url);\r\n        setProgress(percent);\r\n        setLoading(false);\r\n        setError('');\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setProgress(0);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const removeFile = (name: string) => {\r\n    setLoading(true);\r\n    deleteFile(name)\r\n      .then(() => {\r\n        setFileUrl('');\r\n        setFileName('');\r\n        setProgress(0);\r\n        setLoading(false);\r\n        setError('');\r\n      })\r\n      .catch((err) => {\r\n        setError(err);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return { onFileChange, fileUrl, progress, error, loading, fileName, removeFile };\r\n};\r\n\r\nexport default useFileUpload;\r\n","import { fireStorage } from \"../config/firebase\";\r\n\r\ninterface UploadFileResponse {\r\n  url: string;\r\n  percent: number;\r\n}\r\n\r\nexport const uploadFile = (file: File): Promise<UploadFileResponse> => {\r\n  return new Promise((resolve, reject) => {\r\n    const storageRef = fireStorage.ref();\r\n    const fileRef = storageRef.child(`images/${file.name}`);\r\n    fileRef\r\n      .put(file)\r\n      .then((snapshot) => {\r\n        snapshot.ref.getDownloadURL().then((url) => {\r\n          resolve({ url, percent: (snapshot.bytesTransferred / snapshot.totalBytes) * 100 });\r\n        });\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n};\r\n\r\nexport const deleteFile = (fileName: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    const storageRef = fireStorage.ref();\r\n    const fileRef = storageRef.child(`images/${fileName}`);\r\n    fileRef\r\n      .delete()\r\n      .then((snapshot) => {\r\n        resolve(snapshot);\r\n      })\r\n      .catch((error) => reject(error));\r\n  });\r\n}","const success = {\r\n  CREATE_POST_SUCCESS: 'CREATE_POST_SUCCESS',\r\n}\r\n\r\nexport default success;","const error = {\r\n  CREATE_POST_ERROR: 'CREATE_POST_ERROR'\r\n}\r\n\r\nexport default error;","export const categoryList = [\r\n  {\r\n    id: '1',\r\n    name: 'Web Development',\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Mobile Development',\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Full Stack',\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Frontend Development',\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Backend Development',\r\n  }\r\n];","import { Button, Paper, TextField, Typography, Box } from '@mui/material';\r\nimport React, { useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { createPost } from '../../../../../services/api/api.posts';\r\nimport { iCreatePost } from '../../common/@types';\r\nimport Tags from '../../../../../components/Tags';\r\nimport CustomSelect from '../../../../../components/CustomSelect/CustomSelect';\r\nimport UploadButton from '../../../../../components/UploadButton';\r\nimport useFileUpload from '../../../../../services/hooks/useFileUpload';\r\nimport success from '../../../../../services/QueryId/success';\r\nimport error from '../../../../../services/QueryId/error';\r\nimport { categoryList } from '../../common/data/constants';\r\n\r\nconst CreatePost: React.FC = (): JSX.Element => {\r\n  const [form, setForm] = React.useState<iCreatePost>({\r\n    title: '',\r\n    tags: [],\r\n    category: '',\r\n    content: '',\r\n    image: '',\r\n  });\r\n\r\n  const { onFileChange, fileName, fileUrl, progress, loading, removeFile } = useFileUpload();\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setForm((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleAddTag = React.useCallback((arr) => setForm((prev) => ({ ...prev, tags: arr })), []);\r\n\r\n  const handleSave = () => {\r\n    if(!form.title || !form.content || !form.category || !form.tags.length || !form.image) {\r\n      return toast.error('Please fill all the fields', { toastId: error.CREATE_POST_ERROR });\r\n    }\r\n    createPost(form)\r\n      .then((data) => data && toast.success('Post saved successfully', { toastId: success.CREATE_POST_SUCCESS }))\r\n      .catch((err) => toast.error(err.message, { toastId: error.CREATE_POST_ERROR }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setForm((prev) => ({ ...prev, image: fileUrl }));\r\n  }, [fileUrl]);\r\n\r\n  return (\r\n    <Paper>\r\n      <Box component=\"div\" display=\"flex\" flexDirection=\"column\" py={3}>\r\n        <Box component=\"div\" display=\"flex\" marginY={5} sx={{ width: '50%', marginX: 'auto' }}>\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">\r\n            Create a new post\r\n          </Typography>\r\n        </Box>\r\n        <TextField\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          variant=\"standard\"\r\n          onChange={handleChange}\r\n          sx={{ marginBottom: '1em', marginX: 'auto' }}\r\n          required\r\n        />\r\n        <Tags\r\n          label=\"Add tags\"\r\n          variant=\"standard\"\r\n          handleAddTag={handleAddTag}\r\n          sx={{ marginBottom: '1em', marginX: 'auto' }}\r\n        />\r\n\r\n        <CustomSelect\r\n          data={categoryList}\r\n          value={form.category}\r\n          label=\"Category\"\r\n          labelId=\"category\"\r\n          handleChange={(e) => setForm((prev) => ({ ...prev, category: e.target.value }))}\r\n          variant=\"standard\"\r\n          required\r\n          sx={{ width: '50%', marginBottom: '1em', marginX: 'auto' }}\r\n        />\r\n        <TextField\r\n          label=\"Content\"\r\n          type=\"text\"\r\n          name=\"content\"\r\n          variant=\"standard\"\r\n          onChange={handleChange}\r\n          sx={{ marginBottom: '1rem', marginX: 'auto' }}\r\n          required\r\n        />\r\n        <UploadButton\r\n          id=\"createpost\"\r\n          variant=\"outlined\"\r\n          progress={progress}\r\n          loading={loading}\r\n          fileName={fileName}\r\n          wrapperStyle={{ width: '50%', margin: '1em auto' }}\r\n          acceptOnlyFormats={['.png', '.jpg', '.jpeg']}\r\n          handleRemoveFile={removeFile}\r\n          handleFileChange={(e) => {\r\n            if (e.target.files && e.target.files.length > 0) {\r\n              return onFileChange(e.target.files?.[0]);\r\n            }\r\n          }}\r\n        />\r\n        <Button sx={{ width: '50%', margin: '1em auto' }} variant=\"outlined\" onClick={handleSave}>\r\n          Save\r\n        </Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport mainRoutes from '../../../mainRoutes';\r\nimport { CreatePost } from './pages/CreatePost';\r\n\r\nconst Post:React.FC = () => {\r\n    return (\r\n        <Routes>\r\n            <Route  path={mainRoutes.createPost} element={<CreatePost />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default Post;"],"sourceRoot":""}