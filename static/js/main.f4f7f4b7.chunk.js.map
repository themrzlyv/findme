{"version":3,"sources":["ui/pages/Post/postRoutes.ts","mainRoutes.ts","ui/components/Layout/Layout.tsx","ui/pages/Home/Home.tsx","services/config/firebase.ts","components/Tags/Tags.tsx","ui/pages/Post/pages/CreatePost/CreatePost.tsx","services/api/api.posts.ts","ui/pages/Post/Post.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","Global/rootReducer.ts","Global/Store.ts","Theme/theme.ts","index.tsx"],"names":["postRoutes","createPost","mainRoutes","home","post","Layout","children","Grid","container","maxWidth","mx","item","xs","AppBar","position","color","Toolbar","Typography","variant","Home","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","storage","Tags","label","handleAddTag","sx","React","useState","tags","setTags","useEffect","TextField","onKeyDown","e","length","target","value","key","prev","onChange","InputProps","startAdornment","Box","margin","display","map","data","index","Stack","direction","gap","marginBottom","marginRight","Chip","onDelete","newtags","filter","val","handleDelete","CreatePost","title","category","content","form","setForm","handleChange","name","useCallback","arr","console","log","Paper","component","flexDirection","py","width","marginX","fontWeight","type","required","Button","onClick","reqData","Promise","resolve","reject","collection","add","then","result","get","exists","catch","err","toast","success","toastId","error","message","Post","path","element","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","configureStore","reducer","devTools","theme","createTheme","palette","primary","main","lightBlue","light","dark","components","MuiTextField","styleOverrides","root","ReactDOM","render","ThemeProvider","autoClose","transition","Slide","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f4f7f4b7.chunk.js","sourcesContent":["const postRoutes = {\r\n  createPost: '/create',\r\n}\r\n\r\nexport default postRoutes;","import postRoutes from \"./ui/pages/Post/postRoutes\";\r\n\r\nconst mainRoutes = {\r\n  home: '/findme',\r\n  post: '/findme/post/*',\r\n\r\n  ...postRoutes,\r\n}\r\n\r\nexport default mainRoutes;","import React from 'react';\r\nimport { AppBar, Grid, Toolbar, Typography } from '@mui/material';\r\n\r\ninterface iProps {}\r\n\r\nconst Layout: React.FC<iProps> = ({ children }): JSX.Element => {\r\n  return (\r\n    <Grid container maxWidth=\"lg\" mx=\"auto\">\r\n      <Grid item xs={12}>\r\n        <AppBar position=\"static\" color=\"primary\">\r\n          <Toolbar>\r\n            <Typography variant=\"body2\">FindMe</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {children}\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        Sidebar\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\ninterface iProps {\r\n}\r\n\r\nconst Home:React.FC<iProps> = (): JSX.Element => {\r\n    return (\r\n        <div>\r\n            our home page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/storage'\r\nimport 'firebase/compat/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAIMaPjRkt4OGl0YorPyBnFiMH446bUU5I\",\r\n  authDomain: \"findme-web-app.firebaseapp.com\",\r\n  projectId: \"findme-web-app\",\r\n  storageBucket: \"findme-web-app.appspot.com\",\r\n  messagingSenderId: \"873728734687\",\r\n  appId: \"1:873728734687:web:4e0cff13f3a17a7386406a\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const fireStorage = firebase.storage();\r\nexport default firebase;","import { Chip, Stack, TextField } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react';\r\n\r\ninterface iProps {\r\n  label?: string;\r\n  handleAddTag: (arr: string[]) => void;\r\n  variant?: 'standard' | 'outlined' | 'filled';\r\n  sx?: any;\r\n}\r\n\r\nconst Tags: React.FC<iProps> = ({ label, handleAddTag, variant, sx }): JSX.Element => {\r\n  const [tags, setTags] = React.useState<string[]>([]);\r\n\r\n  const handleDelete = (value: string) => {\r\n    const newtags = tags.filter((val) => val !== value);\r\n    setTags(newtags);\r\n  };\r\n\r\n  const handlePressEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (tags.length >= 5) return;\r\n    if ((e.target as HTMLInputElement).value === '') return;\r\n    if ((e.target as HTMLInputElement).value?.length >= 15) return;\r\n    if (e.key === 'Enter') {\r\n      setTags((prev) => [...prev, (e.target as HTMLInputElement).value]);\r\n      return ((e.target as HTMLInputElement).value = '');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (tags.length === 0) {\r\n      return (e.target.value = ' ');\r\n    }\r\n\r\n    if (tags.length >= 5) {\r\n      return (e.target.value = '');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleAddTag(tags);\r\n  }, [tags]);\r\n\r\n  return (\r\n    <>\r\n      <TextField\r\n        variant={variant}\r\n        sx={sx}\r\n        onKeyDown={handlePressEnter}\r\n        onChange={handleChange}\r\n        label={label}\r\n        InputProps={{\r\n          startAdornment: tags?.length > 0 && (\r\n            <Box sx={{ margin: '0 0.2rem 0 0', display: 'flex' }}>\r\n              {tags.map((data, index) => {\r\n                return (\r\n                  <Stack direction=\"row\" gap={1} key={index} marginBottom={1} marginRight={1}>\r\n                    <Chip label={data} onDelete={() => handleDelete(data)} />\r\n                  </Stack>\r\n                );\r\n              })}\r\n            </Box>\r\n          ),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tags;\r\n","import { Button, Chip, Paper, Stack, TextField, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { Cancel, Tag } from '@mui/icons-material';\r\n\r\nimport { createPost } from '../../../../../services/api/api.posts';\r\nimport { iCreatePost } from '../../common/@types';\r\nimport Tags from '../../../../../components/Tags';\r\n\r\nconst CreatePost: React.FC = (): JSX.Element => {\r\n  const [form, setForm] = React.useState<iCreatePost>({\r\n    title: '',\r\n    tags: [],\r\n    category: '',\r\n    content: '',\r\n  });\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setForm((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    createPost(form)\r\n      .then((data) => data && toast.success('Post saved successfully', { toastId: 'saveId' }))\r\n      .catch((err) => toast.error(err.message, { toastId: 'errorId' }));\r\n  };\r\n\r\n  const handleAddTag = React.useCallback((arr) => setForm((prev) => ({ ...prev, tags: arr })), []);\r\n\r\n  console.log(form);\r\n\r\n  return (\r\n    <Paper>\r\n      <Box component=\"div\" display=\"flex\" flexDirection=\"column\" py={3}>\r\n        <Box component=\"div\" display=\"flex\" sx={{ width: '50%', marginX: 'auto' }}>\r\n          <Typography variant=\"h5\" fontWeight=\"bold\">\r\n            Create a new post\r\n          </Typography>\r\n        </Box>\r\n        <TextField\r\n          label=\"Title\"\r\n          type=\"text\"\r\n          name=\"title\"\r\n          variant=\"standard\"\r\n          onChange={handleChange}\r\n          sx={{ marginBottom: '1rem', marginX: 'auto' }}\r\n          required\r\n        />\r\n        <Tags\r\n          label=\"Add tags\"\r\n          variant=\"standard\"\r\n          handleAddTag={handleAddTag}\r\n          sx={{ marginBottom: '1rem', marginX: 'auto' }}\r\n        />\r\n        <TextField\r\n          label=\"Category\"\r\n          type=\"text\"\r\n          name=\"category\"\r\n          variant=\"standard\"\r\n          onChange={handleChange}\r\n          sx={{ marginBottom: '1rem', marginX: 'auto' }}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Content\"\r\n          type=\"text\"\r\n          name=\"content\"\r\n          variant=\"standard\"\r\n          onChange={handleChange}\r\n          sx={{ marginBottom: '1rem', marginX: 'auto' }}\r\n          required\r\n        />\r\n        <Button onClick={handleSave}>Save</Button>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import { iCreatePost } from \"../../ui/pages/Post/common/@types\";\r\nimport { firestore } from \"../config/firebase\";\r\n\r\nexport const createPost = (reqData: iCreatePost) => {\r\n  return new Promise((resolve,reject) => {\r\n      firestore\r\n          .collection('posts')\r\n          .add(reqData)\r\n          .then((result) => result.get())\r\n          .then((post) => resolve(post.exists))\r\n          .catch(err => reject(err));\r\n  })\r\n}","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport mainRoutes from '../../../mainRoutes';\r\nimport { CreatePost } from './pages/CreatePost';\r\n\r\nconst Post:React.FC = () => {\r\n    return (\r\n        <Routes>\r\n            <Route  path={mainRoutes.createPost} element={<CreatePost />} />\r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport mainRoutes from './mainRoutes';\nimport { Layout } from './ui/components/Layout';\n\nimport Home from './ui/pages/Home';\nimport Post from './ui/pages/Post';\n\nconst App:React.FC = () => {\n    return (\n      <Layout>\n        <Routes>\n          <Route element={<Home />} path={mainRoutes.home} />\n          <Route element={<Post />} path={mainRoutes.post} />\n        </Routes>\n      </Layout>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({});\r\n\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== \"development\" ? false : true\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import { createTheme } from '@mui/material/styles';\r\nimport { lightBlue } from '@mui/material/colors';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: lightBlue[800],\r\n      light: lightBlue[400],\r\n      dark: lightBlue[900],\r\n    }\r\n  },\r\n  components: {\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          width: '50%'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material';\n\nimport { ToastContainer, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Global/Store';\nimport { theme } from './Theme/theme';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n        <ToastContainer\n          theme=\"colored\"\n          position=\"bottom-right\"\n          autoClose={2000}\n          transition={Slide}\n          hideProgressBar\n          closeOnClick\n          pauseOnFocusLoss\n          pauseOnHover\n        />\n      </ThemeProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}