{"version":3,"sources":["ui/components/FallBackUi/FallBackUi.tsx","ui/components/Layout/partials/NavigationMenu/NavigationMenu.tsx","ui/components/Layout/Layout.tsx","ui/pages/Home/components/Post.tsx","ui/pages/Home/blocks/Posts.tsx","ui/pages/Home/partials/Body.tsx","ui/pages/Home/partials/Header.tsx","ui/pages/Home/Home.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","Global/rootReducer.ts","Global/Store.ts","Theme/theme.ts","ui/components/ErrorBoundary/ErrorBoundary.tsx","index.tsx","ui/pages/Post/common/redux/Post.Slice.ts","services/config/firebase.ts","ui/pages/Post/postRoutes.ts","mainRoutes.ts","services/api/api.posts.ts","services/selectors/index.ts"],"names":["FallBackUi","Box","component","display","alignItems","justifyContent","height","CircularProgress","NavigationMenu","AppBar","position","color","Toolbar","width","Link","underline","fontFamily","fontWeight","fontSize","letterSpacing","NavLink","to","Layout","children","Grid","container","maxWidth","mx","item","xs","marginTop","Post","post","Card","sx","marginBottom","CardMedia","alt","image","CardContent","Typography","gutterBottom","variant","title","content","substring","CardActions","Button","size","href","id","target","React","memo","Posts","posts","useSelector","postSelector","flexWrap","map","Body","dispatch","useDispatch","useEffect","fetchPosts","then","getAllPosts","padding","Header","marginY","Home","Paper","elevation","flexDirection","lazy","App","fallback","element","path","mainRoutes","home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","PostSlice","store","configureStore","reducer","devTools","theme","createTheme","palette","primary","main","lightBlue","light","dark","components","MuiTextField","styleOverrides","root","ErrorBoundary","hasError","errorInfo","this","props","_","Component","ReactDOM","render","ThemeProvider","autoClose","transition","Slide","hideProgressBar","closeOnClick","pauseOnFocusLoss","pauseOnHover","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","initialState","isLoading","postSlice","createSlice","name","reducers","action","payload","getPost","clearPost","setLoading","setError","actions","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","fireStorage","storage","postRoutes","createPost","postDetail","reqData","Promise","resolve","reject","collection","add","result","exists","err","docs","data","fetchPost","doc","createSelector"],"mappings":"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","file":"static/js/main.95840ed7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { CircularProgress } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\n\r\ninterface iProps {}\r\n\r\nconst FallBackUi: React.FC<iProps> = (): JSX.Element => {\r\n  return (\r\n    <Box component=\"div\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height=\"100vh\">\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FallBackUi;\r\n","import { AppBar, Toolbar, Link } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface iProps {}\r\n\r\nconst NavigationMenu: React.FC<iProps> = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Box\r\n            component=\"div\"\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n          >\r\n            <Link\r\n              color=\"inherit\"\r\n              underline=\"none\"\r\n              fontFamily=\"sans-serif\"\r\n              fontWeight=\"bold\"\r\n              fontSize=\"h6\"\r\n              letterSpacing=\"0.5px\"\r\n              component={NavLink}\r\n              to=\"/findme\"\r\n            >\r\n              FindMe\r\n            </Link>\r\n            <Link\r\n              color=\"inherit\"\r\n              underline=\"none\"\r\n              fontSize=\"1em\"\r\n              fontFamily=\"sans-serif\"\r\n              letterSpacing=\"0.2px\"\r\n              component={NavLink}\r\n              to=\"/findme/post/create\"\r\n            >\r\n              Add post\r\n            </Link>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationMenu;\r\n","import React from 'react';\r\nimport { Grid } from '@mui/material';\r\nimport NavigationMenu from './partials/NavigationMenu';\r\n\r\ninterface iProps {}\r\n\r\nconst Layout: React.FC<iProps> = ({ children }): JSX.Element => {\r\n  return (\r\n    <Grid container maxWidth=\"lg\" mx=\"auto\">\r\n      <Grid item xs={12}>\r\n        <NavigationMenu />\r\n      </Grid>\r\n      <Grid item xs={12} marginTop={1}>\r\n        {children}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Button, Card, CardActions, CardContent, CardMedia, Typography, Link } from '@mui/material';\r\nimport React from 'react';\r\nimport { iPost } from '../../Post/common/@types';\r\n\r\ninterface iProps {\r\n  post: iPost;\r\n}\r\n\r\nconst Post: React.FC<iProps> = ({ post }): JSX.Element => {\r\n  return (\r\n    <Card sx={{ width: '20em', maxWidth: '22em', marginBottom: '1em' }}>\r\n      <CardMedia component=\"img\" alt=\"green iguana\" height=\"140\" image={post.image} />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {post.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {post.content.substring(0, 75)}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Like</Button>\r\n        <Link\r\n          component={Button}\r\n          size=\"small\"\r\n          href={`findme/post/${post.id}`}\r\n          underline=\"none\"\r\n          target=\"_blank\"\r\n        >\r\n          Read More\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default React.memo(Post);\r\n","import { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { postSelector } from '../../../../services/selectors';\r\nimport Post from './../components/Post';\r\n\r\ninterface iProps {}\r\n\r\nconst Posts: React.FC<iProps> = (): JSX.Element => {\r\n  const { posts } = useSelector(postSelector);\r\n  return (\r\n    <Box\r\n      component=\"div\"\r\n      display=\"flex\"\r\n      justifyContent=\"space-around\"\r\n      flexWrap=\"wrap\"\r\n      sx={{ width: '100%' }}\r\n    >\r\n      {posts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { Box } from '@mui/system';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { fetchPosts } from '../../../../services/api/api.posts';\r\nimport { getAllPosts } from '../../Post/common/redux/Post.Slice';\r\nimport Posts from '../blocks/Posts';\r\n\r\ninterface iProps {}\r\n\r\nconst Body: React.FC<iProps> = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetchPosts().then((posts) => dispatch(getAllPosts(posts)));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box component=\"div\" display=\"flex\" padding={2}>\r\n      <Posts />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Body;\r\n","import { Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\n\r\ninterface iProps {\r\n}\r\n\r\nconst Header:React.FC<iProps> = (): JSX.Element => {\r\n    return (\r\n        <Box component=\"div\" display=\"flex\" justifyContent=\"center\" marginY={3}>\r\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n              Search, find and share development skills\r\n          </Typography>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Header;","import { Paper } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React from 'react';\r\nimport Body from './partials/Body';\r\nimport Header from './partials/Header';\r\n\r\ninterface iProps {}\r\n\r\nconst Home: React.FC<iProps> = (): JSX.Element => {\r\n  return (\r\n    <Paper elevation={2}>\r\n      <Box component=\"div\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\r\n        <Header />\r\n        <Body />\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { lazy, Suspense } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport mainRoutes from './mainRoutes';\nimport FallBackUi from './ui/components/FallBackUi';\nimport { Layout } from './ui/components/Layout';\n\nimport Home from './ui/pages/Home';\n\nconst Post = lazy(() => import('./ui/pages/Post'));\n\nconst App: React.FC = () => {\n  return (\n    <Layout>\n      <Suspense fallback={<FallBackUi />}>\n        <Routes>\n          <Route element={<Home />} path={mainRoutes.home} />\n          <Route element={<Post />} path={mainRoutes.post} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport PostSlice from \"../ui/pages/Post/common/redux/Post.Slice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  posts: PostSlice,\r\n});\r\n\r\n\r\nexport default rootReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    devTools: process.env.NODE_ENV !== \"development\" ? false : true\r\n});\r\n\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;","import { createTheme } from '@mui/material/styles';\r\nimport { lightBlue } from '@mui/material/colors';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: lightBlue[800],\r\n      light: lightBlue[400],\r\n      dark: lightBlue[900],\r\n    }\r\n  },\r\n  components: {\r\n    MuiTextField: {\r\n      styleOverrides: {\r\n        root: {\r\n          width: '50%'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});","import React, { Component, ErrorInfo, ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n}\r\n\r\nclass ErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false\r\n  };\r\n\r\n  public static getDerivedStateFromError(_: Error): State {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error(\"Uncaught error:\", error, errorInfo);\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Sorry.. there was an error</h1>;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@mui/material';\n\nimport { ToastContainer, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Global/Store';\nimport { theme } from './Theme/theme';\nimport ErrorBoundary from './ui/components/ErrorBoundary';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <ErrorBoundary>\n          <App />\n        </ErrorBoundary>\n        <ToastContainer\n          theme=\"colored\"\n          position=\"bottom-right\"\n          autoClose={2000}\n          transition={Slide}\n          hideProgressBar\n          closeOnClick\n          pauseOnFocusLoss\n          pauseOnHover\n        />\n      </ThemeProvider>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { iPost, iPostState } from \"../@types\";\r\n\r\nconst initialState: iPostState = {\r\n  posts: [],\r\n  post: null,\r\n  isLoading: false,\r\n  error: null\r\n}\r\n\r\n\r\nconst postSlice = createSlice({\r\n  name: 'Post',\r\n  initialState,\r\n  reducers: {\r\n    getAllPosts: (state, action: PayloadAction<iPost[]>) => {\r\n      state.posts = action.payload;\r\n    },\r\n    getPost: (state, action: PayloadAction<iPost>) => {\r\n      state.post = action.payload;\r\n    },\r\n    clearPost: (state) => {\r\n      state.post = initialState.post;\r\n    },\r\n    setLoading: (state, action: PayloadAction<boolean>) => {\r\n      state.isLoading = action.payload;\r\n    },\r\n    setError: (state, action: PayloadAction<string>) => {\r\n      state.error = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { getAllPosts, getPost, clearPost, setLoading, setError } = postSlice.actions;\r\n\r\nexport default postSlice.reducer;\r\n\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/storage'\r\nimport 'firebase/compat/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAIMaPjRkt4OGl0YorPyBnFiMH446bUU5I\",\r\n  authDomain: \"findme-web-app.firebaseapp.com\",\r\n  projectId: \"findme-web-app\",\r\n  storageBucket: \"findme-web-app.appspot.com\",\r\n  messagingSenderId: \"873728734687\",\r\n  appId: \"1:873728734687:web:4e0cff13f3a17a7386406a\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const fireStorage = firebase.storage();\r\nexport default firebase;","const postRoutes = {\r\n  createPost: '/create',\r\n  postDetail: '/:id',\r\n}\r\n\r\nexport default postRoutes;","import postRoutes from \"./ui/pages/Post/postRoutes\";\r\n\r\nconst mainRoutes = {\r\n  home: '/findme',\r\n  post: '/findme/post/*',\r\n\r\n  ...postRoutes,\r\n}\r\n\r\nexport default mainRoutes;","import { iCreatePost, iPost } from \"../../ui/pages/Post/common/@types\";\r\nimport { firestore } from \"../config/firebase\";\r\n\r\nexport const createPost = (reqData: iCreatePost) => {\r\n  return new Promise((resolve,reject) => {\r\n      firestore\r\n          .collection('posts')\r\n          .add(reqData)\r\n          .then((result) => result.get())\r\n          .then((post) => resolve(post.exists))\r\n          .catch(err => reject(err));\r\n  })\r\n}\r\n\r\nexport const fetchPosts = (): Promise<iPost[]> => {\r\n  return new Promise((resolve,reject) => {\r\n      firestore\r\n          .collection('posts')\r\n          .get()\r\n          .then((result) => result.docs)\r\n          .then((posts) => posts.map(post => ({ ...post.data(), id: post.id })))\r\n          .then((result) => resolve(result as iPost[]))\r\n          .catch(err => reject(err));\r\n  });\r\n}\r\n\r\nexport const fetchPost = (id: string): Promise<iPost> => {\r\n  return new Promise((resolve,reject) => {\r\n      firestore\r\n          .collection('posts')\r\n          .doc(id)\r\n          .get()\r\n          .then((result) => result.exists ? result.data() : null)\r\n          .then((result) => resolve(result as iPost))\r\n          .catch(err => reject(err));\r\n  });\r\n}","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"../../Global/Store\";\r\n\r\nconst getMainApp = (state: RootState) => state;\r\n\r\nexport const postSelector = createSelector(\r\n  getMainApp,\r\n  ({ posts }) => posts\r\n);"],"sourceRoot":""}